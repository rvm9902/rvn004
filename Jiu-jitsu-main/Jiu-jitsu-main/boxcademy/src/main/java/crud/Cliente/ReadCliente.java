package crud.Cliente;

import java.util.List;
import java.util.Scanner;

import dao.DAO;
import model.Cadastro;

public class ReadCliente {

    public static void executar(Scanner scanner) {
        int opcao;

        do {
            System.out.println("\n========== CONSULTA DE Alunos ==========");
            System.out.println("1 - Buscar aluno por nome");
            System.out.println("2 - Buscar aluno por CPF");
            System.out.println("3 - Listar todos os alunos");
            System.out.println("0 - Voltar ao menu de alunos");
            System.out.print("Escolha uma op√ß√£o: ");

            try {
                opcao = Integer.parseInt(scanner.nextLine());

                switch (opcao) {
                    case 1:
                        buscarPorNome(scanner);
                        break;
                    case 2:
                        buscarPorCPF(scanner);
                        break;
                    case 3:
                        listarTodosComPaginacao(scanner);
                        break;
                    case 0:
                        System.out.println("‚Ü© Retornando ao menu anterior...");
                        break;
                    default:
                        System.out.println("‚ùå Op√ß√£o inv√°lida. Tente novamente.");
                }
            } catch (NumberFormatException e) {
                System.out.println("‚ùå Entrada inv√°lida. Digite apenas n√∫meros.");
                opcao = -1;
            }

        } while (opcao != 0);
    }

    public static void buscarPorNome(Scanner scanner) {
        System.out.print("Digite o nome do aluno: ");
        String nome = scanner.nextLine();

        DAO<Cadastro> dao = new DAO<>(Cadastro.class);
        // Ajuste na consulta JPA para usar a entidade Cadastro e alias 'c'
        List<Cadastro> clientes = dao.consultar(
            "SELECT c FROM Cadastro c WHERE LOWER(c.nome) LIKE LOWER(?1)",
            "%" + nome + "%");

        if (clientes.isEmpty()) {
            System.out.println("‚ùå Nenhum aluno encontrado com esse nome.");
        } else {
            System.out.println("\nüìã Alunos  encontrados:");
            clientes.forEach(System.out::println);
        }
    }

    public static void buscarPorCPF(Scanner scanner) {
        System.out.print("Digite o CPF do aluno: ");
        String cpf = scanner.nextLine();

        DAO<Cadastro> dao = new DAO<>(Cadastro.class);
        List<Cadastro> clientes = dao.consultar(
            "SELECT c FROM Cadastro c WHERE c.cpf = ?1",
            cpf);

        if (clientes.isEmpty()) {
            System.out.println("‚ùå Nenhum aluno encontrado com esse CPF.");
        } else {
            System.out.println("\nüìã Aluno encontrado:");
            clientes.forEach(System.out::println);
        }
    }

    public static void listarTodosComPaginacao(Scanner scanner) {
        System.out.print("Quantos alunos deseja ver por p√°gina (ex: 10, 20, 50)? ");

        int tamanhoPagina = 0;
        while (tamanhoPagina <= 0) {
            try {
                tamanhoPagina = Integer.parseInt(scanner.nextLine());
                if (tamanhoPagina <= 0) {
                    System.out.print("‚ö† Valor deve ser maior que zero. Digite novamente: ");
                }
            } catch (NumberFormatException e) {
                System.out.print("‚ùå N√∫mero inv√°lido. Digite novamente: ");
            }
        }

        int pagina = 0;
        int opcaoPag;

        DAO<Cadastro> dao = new DAO<>(Cadastro.class);

        do {
            List<Cadastro> clientes = dao.obterTodos(tamanhoPagina, pagina * tamanhoPagina);

            System.out.println("\n                                                              üìÑ P√°gina " + (pagina + 1));
            System.out.println("                          ----------------------------------------------------------------------------------------------------");

            if (clientes.isEmpty()) {
                System.out.println("Nenhum aluno encontrado nesta p√°gina.");
            } else {
                // Cabe√ßalho da tabela
                System.out.printf("%-8s %-35s %-17s %-33s %-17s %-39s%n", "ID", "Nome", "CPF", "Email", "Telefone",
                        "Endere√ßo");
                System.out.println(
                        "-----------------------------------------------------------------------------------------------------------------------------------------------------------------");

                // Dados de cada cliente
                for (Cadastro c : clientes) {
                    System.out.printf("%-8d %-35s %-17s %-33s %-17s %-39s%n",
                            c.getId(), c.getNome(), c.getCpf(), c.getEmail(), c.getTelefone(), c.getEndereco());
                }
            }

            System.out.println();
            System.out.println("-----------------------------------------------------------------------------------------------------------------------------------------------------------------");
            System.out.println();
            System.out.println("1 - Pr√≥xima p√°gina");
            System.out.println("2 - P√°gina anterior");
            System.out.println("0 - Voltar ao menu de alunos");
            System.out.print("Escolha uma op√ß√£o: ");

            try {
                opcaoPag = Integer.parseInt(scanner.nextLine());

                switch (opcaoPag) {
                    case 1:
                        pagina++;
                        break;
                    case 2:
                        if (pagina > 0) {
                            pagina--;
                        } else {
                            System.out.println("‚ö† J√° est√° na primeira p√°gina.");
                        }
                        break;
                    case 0:
                        System.out.println("‚Ü© Saindo da listagem...");
                        break;
                    default:
                        System.out.println("‚ùå Op√ß√£o inv√°lida!");
                }

            } catch (NumberFormatException e) {
                System.out.println("‚ùå Entrada inv√°lida.");
                opcaoPag = -1;
            }

        } while (opcaoPag != 0);
    }

}
